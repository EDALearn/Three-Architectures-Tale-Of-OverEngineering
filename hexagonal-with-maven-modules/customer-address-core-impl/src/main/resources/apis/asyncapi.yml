asyncapi: 3.0.0
info:
  title: ""
  version: 0.0.1
  tags:
    - name: "Default"
    - name: "Customer"

defaultContentType: application/json

channels:
  CustomerEventsChannel:
    address: "customer.events"
    messages:
      CustomerEventMessage:
        $ref: '#/components/messages/CustomerEventMessage'
  CustomerAddressEventsChannel:
    address: "customer.address-events"
    messages:
      CustomerAddressUpdatedMessage:
        $ref: '#/components/messages/CustomerAddressUpdatedMessage'

operations:
  onCustomerEvent:
    action: send
    tags:
      - name: Customer
    channel:
      $ref: '#/channels/CustomerEventsChannel'
  onCustomerAddressUpdated:
    action: send
    tags:
      - name: Customer
    channel:
      $ref: '#/channels/CustomerAddressEventsChannel'


components:
  messages:
    CustomerEventMessage:
      name: CustomerEventMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/CustomerEvent"
    CustomerAddressUpdatedMessage:
      name: CustomerAddressUpdatedMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/CustomerAddressUpdated"

  messageTraits:
    CommonHeaders:
      headers:
        type: object
        properties:
          tracingId:
            type: string
            description: This header value can be populated automatically at runtime (when using ZenWave code generator)
            x-runtime-expression: $tracingIdSupplier

  schemas:
    CustomerEvent:
      type: "object"
      x-business-entity: "CustomerEvent"
      properties:
        customerId:
          type: "string"
        eventType:
          $ref: "#/components/schemas/EventType"
        customer:
          $ref: "#/components/schemas/Customer"
    CustomerAddressUpdated:
      type: "object"
      x-business-entity: "CustomerAddressUpdated"
      properties:
        customerId:
          type: "string"
        addressDescription:
          type: "string"
        originalAddress:
          $ref: "#/components/schemas/Address"
        newAddress:
          $ref: "#/components/schemas/Address"
    Address:
      type: "object"
      x-business-entity: "Address"
      required:
      - "street"
      - "type"
      properties:
        id:
          type: "integer"
          format: "int64"
        street:
          type: "string"
          description: "street javadoc comment"
        city:
          type: "string"
          description: "city javadoc comment"
        state:
          type: "string"
          description: "state javadoc comment"
        zip:
          type: "string"
          description: "zip javadoc comment"
        type:
          $ref: "#/components/schemas/AddressType"
    EventType:
      type: "string"
      x-business-entity: "EventType"
      enum:
      - "CREATED"
      - "UPDATED"
      - "DELETED"
    Customer:
      type: "object"
      x-business-entity: "Customer"
      required:
      - "username"
      - "email"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
          description: "username javadoc comment"
        email:
          type: "string"
          description: "email javadoc comment"
        address:
          $ref: "#/components/schemas/Address"
    AddressType:
      type: "string"
      x-business-entity: "AddressType"
      enum:
      - "HOME"
      - "WORK"

